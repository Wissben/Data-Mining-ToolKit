@startuml

title __DBSCAN's Class Diagram__\n

  package Algorithms.DBScan {
    class Cluster {
        - elements : List<Point>
        + Cluster()
        + addToCluster()
        + compareTo()
        + toString()
        + getElements()
        + getClassScore()
        + getCenterOfCluster()
    }
  }
  

  package Algorithms.DBScan {
    class DBSCANClusterer {
        - epsilon : double
        - minPts : double
        - visitedPoints : TreeMap<String, PointStatus>
        - clusters : List<Cluster>
        - allPoints : Collection<Point>
        - mapAttributeValueToCodification : TreeMap<String, BitSet>
        + DBSCANClusterer()
        + start()
        - exploreNeighbors()
        - fusion()
        - getDensityReachableNeighbors()
        + getIntraClassScore()
        + getInterClassScore()
        + getEpsilon()
        + getMinPts()
        + getClusters()
    }
  }
  

  package Algorithms.DBScan {
    enum PointStatus {
      NOISE
      CLUSTERED
    }
  }
  

  package Algorithms.DBScan {
    class Point {
        - point : Instance
        {static} ~ mapAttributeValueToCodification : TreeMap<String, BitSet>
        + Point()
        + Point()
        + Point()
        + getAttInfos()
        {static} + distance()
        {static} - hamDistance()
        + compareTo()
        + getPoint()
        + toString()
        ~ getDimensions()
    }
  }
  

  Cluster -up-|> Comparable
  DBSCANClusterer +-down- PointStatus
  Point -up-|> Comparable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
